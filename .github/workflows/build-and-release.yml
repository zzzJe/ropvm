name: Build & Release
run-name: Build and Release ${{ github.ref_name }}

on:
  push:
    tags:
      "v*"

permissions:
  contents:
    write

env:
  # Disable incremental compilation for faster from-scratch builds
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: build ${{ matrix.target.os }}
    runs-on: ${{ matrix.target.os }}-latest
    strategy:
      matrix:
        target:
          - os: ubuntu
            bin_suffix:
          - os: macos
            bin_suffix:
          - os: windows
            bin_suffix: .exe
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Update Rustup
        run: rustup update
      - name: Compile
        run: cargo build --release
      - name: Check Build Result
        run: ls target/release/
      - name: Rename Binary
        run: mv target/release/opvm${{ matrix.target.bin_suffix }} ./opvm-${{ github.ref_name }}-${{ matrix.target.os }}${{ matrix.target.bin_suffix }}
      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target.os }}
          path: ./opvm-${{ github.ref_name }}-${{ matrix.target.os }}${{ matrix.target.bin_suffix }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Move Artifact
        run: |
          mkdir ./artifacts_pure/
          find ./artifacts -mindepth 2 -type f -exec mv {} ./artifacts_pure/ \;
      - name: Check Artifact
        run: ls -a -R ./artifacts_pure/
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./artifacts_pure/*
          name: "OPVM ${{ github.ref_name }} Release"
          bodyFile: "changelog/${{ github.ref_name }}.md"
          prerelease: ${{ contains(github.ref_name, '-') }}
